@model IEnumerable<Category>
@using RepositoryPattern.Model.Catalog;
@using ClientDependency.Core.Mvc
@{var csspart = "~/Content/themes/Plumb";} 

@functions{
    private string GetCssClassForMenu(MenuPathState state)
    {
        var liClasses = new List<string>();
       if((state & MenuPathState.Parent) == MenuPathState.Parent)
       {
           liClasses.Add("dropdown-menu multi-level");  
       }
       return liClasses.Count > 0 ? string.Join(" ", liClasses) : null; 
    }
}
@{
    Html.RequiresJs("catalog.js", "Custom", 2);
    Html.RequiresJs("jquery.dialog.js", "Custom", 1);

    var mainmenu = Model.Where(x => x.ParentCategoryID == null);
    var submenu = Model.Where(x => x.ParentCategoryID != null);
    
 }
<div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
      <div class="navbar-header">
      <button type="button" class="navbar-toggle active" data-toggle="collapse" data-target="#bs-example-navbar-collapse-2">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
    </div>
      <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-2">
         <ul class="nav navbar-nav navbar-right">
              <li><a href="@Url.Action("AboutUs","Home")">About Us</a></li>
              <li><a href="@Url.Action("ContactUs","Home")">Contact Us</a></li>
              <li><a href="#">My List</a></li>
             @{
                var user = HttpContext.Current.User.Identity;
                if(user.IsAuthenticated == true){
              <li class="last" data-toggle="modal" data-target="#myModal"><a href="@Url.Action("Logout","Account")" id="btnSignOut">Sign Out</a></li>
             }
             if(user.IsAuthenticated == false){
                 <li class="last" data-toggle="modal" data-target="#myModal"><a href="#" id="btnSignIn">Sign In</a></li>
             }
             if(user.Name.ToUpper() == "admin".ToUpper()){
                   <li class="last" ><a href="@Url.Content("/Admin/")" id="btnadmin">Administration</a></li>
             }
             }
            
        </ul>
          @if(user.IsAuthenticated == true){
           <ul class="nav navbar-nav navbar-left"><li><a href="#"> Login User @user.Name</a></li></ul>
          }
      </div>
    </div>
  </div>

<div class="row">
  <div class="container">
    <div class="logo col-lg-4">
      <a href="@Url.Action("Index","Home")"><img src="@Url.Content(csspart + "/img/plumbing-parts-albuquerque-new-mexico.png")"alt="Plumbing Parts albuquerque New Mexico"></a>
    </div>
    <div class="help-container col-md-4 pull-right">
      <h3>Need Help? Call <strong><a href="tel:5058840133">(505) 884-0133</a></strong></h3>
      <p id="hours">(Mon-Fri 8am-5pm)</p>
    </div>
    </div>
  </div>

<nav class="navbar navbar-default" role="navigation">
  <div class="container-fluid">
    <!-- Brand and toggle get grouped for better mobile display -->
    <div class="navbar-header">
      <button type="button" class="navbar-toggle active" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
    </div>

    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
     <ul class="nav navbar-nav">
          <li class="active"><a href="@Url.Action("Index","Home")">Home</a></li>
        <li class="dropdown">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown">Departments <span class="caret"></span></a>
          <ul class="dropdown-menu multi-level" role="menu" aria-labelledby="dropdownMenu">
            @if (Model != null)
            {
                foreach (var cat in mainmenu)
                {
                   if(submenu.Any(x => x.ParentCategoryID == cat.ID) == false){
                  <li><a href="@Url.Action("CategoryProduct","Home",new{Id = cat.ID})">@cat.Name</a></li>
                     }
                     
                      if(submenu.Any(x => x.ParentCategoryID == cat.ID) == true){
                          var mysubMenu = submenu.Where(y => y.ParentCategoryID == cat.ID);
                  <li class="dropdown-submenu"><a href="#" tabindex="-1">@cat.Name</a>
                       <ul class="dropdown-menu">
                           @foreach (var subcat in mysubMenu)
                           {
                              var subsubCat = Model.Where(x => x.ParentCategoryID == subcat.ID).Count();
                            if(subsubCat > 0)
                             {
                            <li><a href="@Url.Action("CategorySubCategory","Home",new{Id = subcat.ID})">@subcat.Name</a></li>
                            }
                             if(subsubCat ==  0 || subsubCat == null)
                             {
                                  <li><a href="@Url.Action("CategoryProduct","Home",new{Id = subcat.ID})">@subcat.Name</a></li>
                             }
                           }
                      </ul>
                  </li>
                     }
                 }
             
            }
            <li class="divider"></li>
          </ul>
        </li>
      </ul>
      <form class="navbar-form navbar-left" role="search">
        <div class="form-group">
          <input type="text" class="form-control" placeholder="Search">
        </div>
        <button type="submit" class="btn btn-default">Submit</button>
      </form>
      <ul class="nav navbar-nav navbar-right">
          @if(ViewBag.RemoveWL == false)
          {
        <li id="wish-btn">
           @Html.Action("MiniWishList","Common")
        </li>
          }
          @if(ViewBag.RemoveWL == true)
          {
        <li id="wish-btn">
        </li>
          }
        <li class="divider"></li>
      </ul>
    </div><!-- /.navbar-collapse -->
  </div><!-- /.container-fluid -->
</nav>


