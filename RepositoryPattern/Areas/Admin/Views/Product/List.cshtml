@using ClientDependency.Core.Mvc
@{
    ViewBag.Title = "List";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";

    Html.RequiresCss("FileUpload/jquery.fileupload-ui.css", "Content", 5);
    Html.RequiresCss("admin/font-awesome.css", "Content", 5);
    Html.RequiresCss("admin/ionicons.css", "Content", 5);

    Html.RequiresJs("jquery-2.1.1.js", "jquery", 1);
   // Html.RequiresJs("jquery.migrate.js", "jquery", 2);
    Html.RequiresJs("jquery-ui-1.11.1.js", "jquery", 2);
    Html.RequiresJs("admin/app.js", "Content", 99);
    Html.RequiresJs("admin/dashboard.js", "Content", 99);

    
}

@using PagedList.Mvc
@using RepositoryPattern.Areas.Admin.Models
@model ProductSearchModel

 @Html.Action("Menu", "Common", new {area="Admin"})
 
@{ //var grid = new MvcWebGrid. (Model.SearchResult, defaultSort: "Name");
 
}}
<aside class="right-side">
  <section class="col-lg-12 connectedSortable">
  
  <div class="row">
     <div class="col-sm-10">
         <br />
            <div class=""> <a href="@Url.Action("Create")" class="btn btn-primary"><span>Add New Product</span></a>  </div>
         <br />
   
            <div class="col-sm-10"">
                <div class="col-sm-5">@Html.TextBox("Search",null, new {id="searchname"})</div><div class="col-sm-5"><button id="btnSearchProduct" class="btn btn-primary">Search</button></div>
            </div>
 
         <br />
          <br />

        <div class="adminContent">
            @if (Model.SearchResult != null && Model.SearchResult.Count() > 0)
            {
               var ss = new MvcWebGrid(Model.SearchResult, defaultSort: "Name");
                @ss.GetHtml(tableStyle:"table table-striped"
                //,headerStyle:"gvHeading"
                //,rowStyle:"gridrow"
                //,alternatingRowStyle:""
                ,columns: ss.Columns(
                    ss.Column("Name","Product Name"),
                    ss.Column("Description"),
                    ss.Column("ID"),
                    ss.Column(header:"", format:@<a href="@Html.Action("Edit", new { Id = "" })">Edit</a>)
                    )
                    )
            }
            <div class="pagination">            
    @Html.PagedListPager(Model.SearchResult
    , page => Url.Action("List", new RouteValueDictionary() 
    {
            { "Page", page },
            { "ProductName", Model.ProductName },
            { "Price", Model.SKU }

    }),
    PagedListRenderOptions.PageNumbersOnly)
    </div>
        </div>
         </div>
      </div>
    
   
  </section>
</aside>
